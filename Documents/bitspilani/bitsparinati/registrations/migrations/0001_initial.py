# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-06-20 17:13
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields
import registrations.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to=registrations.models.user_directory_path, verbose_name='Student File Upload')),
                ('last_uploaded_on', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('certification_flag', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=45)),
                ('payment_amount', models.CharField(max_length=45)),
                ('payment_date', models.CharField(max_length=45)),
                ('payment_bank', models.CharField(max_length=45)),
                ('transaction_id', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, max_length=50, unique=True, verbose_name='email address')),
                ('username', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='username')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_short_name', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_degree_short_name', message='degree short name must be Alphanumeric', regex='^[a-zA-Z]+\\w*$')])),
                ('degree_long_name', models.CharField(max_length=45, validators=[django.core.validators.RegexValidator(code='invalid_degree_long_name', message='degree long name must be Alphanumeric', regex='^[a-zA-Z]+[\\w \\s]*$')])),
            ],
            options={
                'ordering': ['degree_long_name'],
            },
        ),
        migrations.CreateModel(
            name='Discpline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discipline_name', models.CharField(max_length=40, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_discipline_name', message='discipline name must be Alphanumeric', regex='^[a-zA-Z]+\\w*$')])),
                ('discipline_long_name', models.CharField(max_length=60, validators=[django.core.validators.RegexValidator(code='invalid_discipline_long_name', message='discipline long name must be Alphanumeric', regex='^[a-zA-Z]+[\\w \\s]*$')])),
            ],
            options={
                'ordering': ['discipline_long_name'],
                'verbose_name': 'Discipline',
                'verbose_name_plural': 'Disciplines',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=45, unique=True)),
                ('mandatory_document', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry_name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'ordering': ['industry_name'],
                'verbose_name_plural': 'Industries',
            },
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(verbose_name=' ')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_location_name', message='location name must be Alphanumeric', regex='^[a-zA-Z]+\\w*$')])),
                ('is_exam_location', models.BooleanField()),
            ],
            options={
                'ordering': ['location_name'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_code', models.CharField(max_length=6, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_program_code', message='program code must be Alphanumeric', regex='^[a-zA-Z]+\\w*$')])),
                ('program_name', models.CharField(max_length=45, unique=True)),
                ('specific_non_specific', models.BooleanField(default=False)),
                ('form_title', models.CharField(max_length=200)),
                ('available_in_cities', models.ManyToManyField(to='registrations.Location')),
            ],
            options={
                'ordering': ['program_name'],
            },
        ),
        migrations.CreateModel(
            name='PROGRAM_FEES_ADMISSION',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admit_batch', models.IntegerField(validators=[django.core.validators.MaxValueValidator(9999)])),
                ('latest_fee_amount_flag', models.BooleanField()),
                ('sequence_number', models.IntegerField(blank=True, null=True)),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program_fees_admission_requests_created_4', to='registrations.Program')),
            ],
            options={
                'verbose_name': 'Program fees admission',
                'verbose_name_plural': 'Program fees admissions',
            },
        ),
        migrations.CreateModel(
            name='StudentCandidateApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(max_length=20)),
                ('gender', models.CharField(choices=[(None, 'Choose Gender'), ('F', 'Female'), ('M', 'Male')], max_length=10)),
                ('date_of_birth', models.DateField()),
                ('address_line_1', models.CharField(max_length=60)),
                ('address_line_2', models.CharField(blank=True, max_length=40, null=True)),
                ('address_line_3', models.CharField(blank=True, max_length=40, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(choices=[(None, 'Choose State(India)'), ('1', 'Andhra Pradesh'), ('2', 'Arunachal Pradesh'), ('3', 'Assam'), ('4', 'Bihar'), ('5', 'Chhattisgarh'), ('6', 'Goa'), ('7', 'Gujarat'), ('8', 'Haryana'), ('9', 'Himachal Pradesh'), ('10', 'Jammu & Kashmir'), ('11', 'Jharkhand'), ('12', 'Karnataka'), ('13', 'Kerala'), ('14', 'Madhya Pradesh'), ('15', 'Maharashtra'), ('16', 'Manipur'), ('17', 'Meghalaya'), ('18', 'Mizoram'), ('19', 'Nagaland'), ('20', 'Odisha (Orissa)'), ('30', 'Out Side India'), ('21', 'Punjab'), ('22', 'Rajasthan'), ('23', 'Sikkim'), ('24', 'Tamil Nadu'), ('25', 'Telangana'), ('26', 'Tripura'), ('27', 'Uttar Pradesh'), ('28', 'Uttarakhand'), ('29', 'West Bengal')], max_length=20)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('application_status', models.CharField(blank=True, max_length=70, null=True)),
                ('current_organization', models.CharField(blank=True, max_length=50, null=True)),
                ('fathers_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mothers_name', models.CharField(blank=True, max_length=100, null=True)),
                ('nationality', models.CharField(choices=[(None, 'Choose Nationality'), ('1', 'Indian'), ('3', 'Non-Indian'), ('2', 'NRI')], max_length=15)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('mobile', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('email_id', models.CharField(blank=True, max_length=50, null=True)),
                ('current_employment_status', models.CharField(choices=[(None, 'Choose Employment Status'), ('4', 'Contractor'), ('1', 'Employed'), ('5', 'Part-Time'), ('3', 'Self Employed'), ('2', 'Unemployed')], max_length=20)),
                ('employer_consent_flag', models.BooleanField(default=False)),
                ('employer_mentor_flag', models.BooleanField(default=False)),
                ('current_org_employee_number', models.CharField(blank=True, max_length=15, null=True)),
                ('current_designation', models.CharField(blank=True, max_length=30, null=True)),
                ('fee_payment_owner', models.CharField(choices=[(None, 'Choose who will pay the fees'), ('1', 'Full Fees by Employer'), ('3', 'Full payment by self'), ('4', 'Not Applicable'), ('2', 'Part payment by Employer,part by self')], max_length=50)),
                ('current_org_employment_date', models.DateField()),
                ('exam_location', models.CharField(blank=True, max_length=45, null=True)),
                ('total_work_experience_in_months', models.IntegerField(blank=True, null=True, verbose_name='total Experience')),
                ('math_proficiency_level', models.CharField(choices=[(None, 'Choose Level'), ('1', 'Till Matriculation(Std. X)'), ('2', 'Till Intermediate(Std. XII)'), ('3', 'Graduate Studies (Engg. And Science)'), ('4', 'Graduate Studies in Maths'), ('5', 'Post Graduate Studies (Engg. And Science)'), ('6', 'Post Graduate Studies  in Maths'), ('7', 'Not Studied')], max_length=45)),
                ('prior_student_flag', models.CharField(choices=[(None, 'Choose'), ('1', 'YES'), ('2', 'NO')], max_length=45)),
                ('bits_student_id', models.CharField(blank=True, max_length=15, null=True)),
                ('parallel_studies_flag', models.CharField(choices=[(None, 'YES/NO'), ('1', 'YES'), ('2', 'NO')], max_length=45)),
                ('bonafide_flag', models.BooleanField(default=True)),
                ('created_on_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_updated_on_datetime', models.DateTimeField(auto_now_add=True)),
                ('student_application_id', models.CharField(blank=True, max_length=20, null=True)),
                ('admit_batch', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(9999)])),
                ('current_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentcandidateapplication_requests_created_7', related_query_name='%(class)s_requests_created_7s', to='registrations.Location')),
                ('current_org_industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentcandidateapplication_requests_created_8', to='registrations.Industry')),
                ('login_email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentcandidateapplication_requests_created_5', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentcandidateapplication_requests_created_6', to='registrations.Program')),
                ('work_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentcandidateapplication_requests_created_109', related_query_name='%(class)s_requests_created_7s1', to='registrations.Location')),
            ],
        ),
        migrations.CreateModel(
            name='StudentCandidateMentor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('highest_qualification', models.CharField(max_length=45)),
                ('school_college', models.CharField(blank=True, max_length=50, null=True)),
                ('specialization', models.CharField(blank=True, max_length=45, null=True)),
                ('designation', models.CharField(max_length=45)),
                ('organization', models.CharField(max_length=45)),
                ('address1', models.CharField(blank=True, max_length=60, null=True)),
                ('address2', models.CharField(blank=True, max_length=40, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.CharField(max_length=50)),
                ('contact_phone', models.IntegerField(blank=True, null=True)),
                ('work_experience_in_years', models.IntegerField()),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentcandidatementor_requests_created_11', to='registrations.StudentCandidateApplication')),
            ],
        ),
        migrations.CreateModel(
            name='StudentCandidateQualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_college', models.CharField(blank=True, max_length=45, null=True)),
                ('duration', models.CharField(choices=[(None, 'Choose Duration'), ('1', '6 months'), ('2', '1 year'), ('3', '1.5 year'), ('4', '2 year'), ('5', '2.5 year'), ('6', '3 year'), ('7', '3.5 year'), ('8', '4 year'), ('9', '> 4 year')], max_length=45)),
                ('percentage_marks_cgpa', models.DecimalField(decimal_places=2, max_digits=10)),
                ('completion_year', models.CharField(blank=True, max_length=5, null=True)),
                ('division', models.CharField(choices=[(None, 'Choose Division'), ('1', '1st division'), ('2', '2nd division'), ('3', '3rd division'), ('4', 'NA')], max_length=10)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentcandidatequalification_requests_created_12', to='registrations.StudentCandidateApplication')),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentcandidatequalification_requests_created_13', to='registrations.Degree')),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studentcandidatequalification_requests_created_14', to='registrations.Discpline')),
            ],
        ),
        migrations.CreateModel(
            name='StudentCandidateWorkExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(max_length=50)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('designations', models.CharField(max_length=100)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentcandidateworkexperience_requests_created_15', to='registrations.StudentCandidateApplication')),
            ],
        ),
        migrations.AddField(
            model_name='applicationpayment',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicationpayment_requests_created_3', to='registrations.StudentCandidateApplication'),
        ),
        migrations.AddField(
            model_name='applicationdocument',
            name='application',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicationdocument_requests_created_1', to='registrations.StudentCandidateApplication'),
        ),
        migrations.AddField(
            model_name='applicationdocument',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applicationdocument_requests_created_2', to='registrations.DocumentType'),
        ),
    ]
